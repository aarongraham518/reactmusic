{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","currentTime","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","color","uuidv4","App","useRef","useState","data","timeUpdateHandler","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAgIeA,EArHA,SAAC,GAUT,IATHC,EASE,EATFA,SACAC,EAQE,EARFA,YACAC,EAOE,EAPFA,UACAC,EAME,EANFA,aACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,eACAC,EACE,EADFA,SAGMC,EAAuB,SAACC,GAE1B,IAAMC,EAAWL,EAAMM,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOJ,EAASI,GACb,2BACAD,GADP,IAEIE,QAAQ,IAGZ,2BACOF,GADP,IAEIE,QAAQ,OAIpBP,EAASG,IAaPK,EAAU,SAACC,GACb,OACIC,KAAKC,MAAMF,EAAO,IAAM,KAAO,IAAMC,KAAKC,MAAMF,EAAO,KAAKG,OAAO,IAWrEC,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACjBC,EAAelB,EAAMmB,WAAU,SAACZ,GAAD,OAAUA,EAAKC,KAAOb,EAAYa,MACpD,iBAAdQ,EAFkB,gCAGdf,EAAeD,GAAOkB,EAAe,GAAKlB,EAAMoB,SAHlC,OAIpBjB,EAAqBH,GAAOkB,EAAe,GAAKlB,EAAMoB,SAJlC,UAQJ,cAAdJ,EARkB,qBASbE,EAAe,GAAKlB,EAAMoB,UAAY,EATzB,iCAUPnB,EAAeD,EAAMA,EAAMoB,OAAQ,IAV5B,cAWbjB,EAAqBH,EAAMA,EAAMoB,OAAQ,IAEtCxB,GAAWF,EAAS2B,QAAQC,OAblB,4CAgBXrB,EAAeD,GAAOkB,EAAe,GAAKlB,EAAMoB,SAhBrC,QAiBjBjB,EAAqBH,GAAOkB,EAAe,GAAKlB,EAAMoB,SAjBrC,QAmBlBxB,GAAWF,EAAS2B,QAAQC,OAnBV,4CAAH,sDAuBtB,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,4BAAIb,EAAQX,EAASyB,eACrB,sBAAKD,UAAU,QAAf,UACA,uBACIE,IAAK,EACLC,IAAK3B,EAAS4B,UAAY,EAC1BC,MAAO7B,EAASyB,YAChBK,SAxCI,SAACC,GACjBpC,EAAS2B,QAAQG,YAAcM,EAAEC,OAAOH,MACxC9B,EAAY,2BAELC,GAFI,IAGPyB,YAAaM,EAAEC,OAAOH,UAoCdI,KAAK,UAET,qBAAKT,UAAU,qBAEf,4BAAIxB,EAAS4B,SAAWjB,EAAQX,EAAS4B,UAAY,YAGzD,sBAAKJ,UAAU,eAAf,UACI,cAAC,IAAD,CACIU,QAAS,kBAAMlB,EAAiB,cAChCQ,UAAU,YACVW,KAAK,KACLC,KAAMC,MAEV,cAAC,IAAD,CACIH,QAvEQ,WACjBrC,GACCF,EAAS2B,QAAQgB,QACjBxC,GAAcD,KAEdF,EAAS2B,QAAQC,OACjBzB,GAAcD,KAkEN2B,UAAU,OACVW,KAAK,KACLC,KAAMvC,EAAY0C,IAAUC,MAEhC,cAAC,IAAD,CACIN,QAAS,kBAAMlB,EAAiB,iBAChCQ,UAAU,eACVW,KAAK,KACLC,KAAMK,aC7GXC,EAVF,SAAC,GAAmB,IAAlB9C,EAAiB,EAAjBA,YACX,OACI,sBAAK4B,UAAU,iBAAf,UACI,qBAAKmB,IAAK/C,EAAYgD,KAAMC,IAAKjD,EAAYkD,QAC7C,6BAAKlD,EAAYgD,OACjB,6BAAKhD,EAAYmD,aCiCdC,EArCK,SAAC,GAAsE,IAArExC,EAAoE,EAApEA,KAAMP,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,eAAgBO,EAAuC,EAAvCA,GAAId,EAAmC,EAAnCA,SAAUE,EAAyB,EAAzBA,UAAWM,EAAc,EAAdA,SAClE8C,EAAiB,uCAAG,4BAAA/B,EAAA,sEAGhBhB,EAAeM,GAHC,OAMhBF,EAAWL,EAAMM,KAAI,SAACC,GACxB,OAAGA,EAAKC,KAAOA,EACJ,2BACAD,GADP,IAEIE,QAAQ,IAGZ,2BACOF,GADP,IAEIE,QAAQ,OAKpBP,EAASG,GAENT,GAAWF,EAAS2B,QAAQC,OAtBT,2CAAH,qDAyBvB,OACI,sBAAKW,QAASe,EAAmBzB,UAAS,uBAAkBhB,EAAKE,OAAS,WAAY,IAAtF,UACI,qBAAKiC,IAAKnC,EAAKoC,KAAMC,IAAKrC,EAAKsC,QAC/B,sBAAKtB,UAAU,mBAAf,UACI,6BAAKhB,EAAKoC,OACV,6BAAKpC,EAAKuC,gBCTXG,EAtBC,SAAC,GAA2E,IAA1EjD,EAAyE,EAAzEA,MAAOC,EAAkE,EAAlEA,eAAgBP,EAAkD,EAAlDA,SAAUE,EAAwC,EAAxCA,UAAWM,EAA6B,EAA7BA,SAAUgD,EAAmB,EAAnBA,cACpE,OACI,sBAAK3B,UAAS,kBAAa2B,EAAgB,iBAAmB,IAA9D,UACI,yCACA,qBAAK3B,UAAU,gBAAf,SACKvB,EAAMM,KAAI,SAAAC,GAAI,OACX,cAAC,EAAD,CACIP,MAAOA,EACPC,eAAgBA,EAChBM,KAAMA,EACNC,GAAID,EAAKC,GAETd,SAAUA,EACVE,UAAWA,EACXM,SAAUA,GAHLK,EAAKC,aCEnB2C,EAZH,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,iBAAkBF,EAAmB,EAAnBA,cAC5B,OACI,gCACI,uCACA,yBAAQjB,QAAS,kBAAMmB,GAAkBF,IAAzC,oBAEI,cAAC,IAAD,CAAiBf,KAAMkB,a,QCoExBC,MA5Ef,WACE,MAAO,CACL,CACEX,KAAM,eACNE,MACE,yGACFC,OAAQ,6BACRS,MAAO,gDACPC,MAAO,CAAC,UAAW,WACnBhD,GAAIiD,cACJhD,QAAQ,GAEV,CACEkC,KAAM,WACNE,MACE,yGACFC,OAAQ,WACRS,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBhD,GAAIiD,cACJhD,QAAQ,GAEV,CACEkC,KAAM,aACNE,MACE,yGACFC,OAAQ,WACRS,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBhD,GAAIiD,cACJhD,QAAQ,GAEV,CACEkC,KAAM,YACNE,MACE,yGACFC,OAAQ,WACRS,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBhD,GAAIiD,cACJhD,QAAQ,GAEV,CACEkC,KAAM,aACNE,MACE,yGACFC,OAAQ,WACRS,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBhD,GAAIiD,cACJhD,QAAQ,GAEV,CACEkC,KAAM,uBACNE,MACE,yGACFC,OAAQ,6BACRS,MAAO,gDACPC,MAAO,CAAC,UAAW,WACnBhD,GAAIiD,cACJhD,QAAQ,GAEV,CACIkC,KAAM,mBACNE,MACE,yGACFC,OAAQ,qBACRS,MAAO,+CACPC,MAAO,CAAC,UAAW,WACnBhD,GAAIiD,cACJhD,QAAQ,KCIDiD,MAlEf,WAEG,IAAMhE,EAAWiE,iBAAO,MAFZ,EAIaC,mBAASC,KAJtB,mBAIN7D,EAJM,KAICE,EAJD,OAKyB0D,mBAAS5D,EAAM,IALxC,mBAKNL,EALM,KAKOM,EALP,OAMqB2D,oBAAS,GAN9B,mBAMNhE,EANM,KAMKC,EANL,OAOmB+D,mBAAS,CACvCpC,YAAa,EACbG,SAAU,IATC,mBAON5B,EAPM,KAOID,EAPJ,OAW6B8D,oBAAS,GAXtC,mBAWNV,EAXM,KAWSE,EAXT,KAaTU,EAAoB,SAAChC,GACzB,IAAMT,EAAUS,EAAEC,OAAOP,YACnBG,EAAWG,EAAEC,OAAOJ,SAC1B7B,EAAY,2BACJC,GADG,IAEHyB,YAAaH,EACbM,eAIJoC,EAAc,uCAAG,4BAAA9C,EAAA,6DACjBC,EAAelB,EAAMmB,WAAU,SAACZ,GAAD,OAAUA,EAAKC,KAAOb,EAAYa,MADhD,SAEbP,EAAeD,GAAOkB,EAAe,GAAKlB,EAAMoB,SAFnC,OAGhBxB,GAAWF,EAAS2B,QAAQC,OAHZ,2CAAH,qDAMlB,OACE,sBAAKC,UAAS,cAAS2B,EAAgB,iBAAmB,IAA1D,UACE,cAAC,EAAD,CACEA,cAAeA,EACfE,iBAAkBA,IAEpB,cAAC,EAAD,CAAMzD,YAAaA,IACnB,cAAC,EAAD,CACED,SAAUA,EACVG,aAAcA,EACdD,UAAWA,EACXD,YAAaA,EACbG,YAAaA,EACbC,SAAUA,EACVC,MAAOA,EACPC,eAAgBA,EAChBC,SAAUA,IAEd,cAAC,EAAD,CACER,SAAUA,EACVM,MAAOA,EACPC,eAAgBA,EAChBL,UAAWA,EACXM,SAAUA,EACVgD,cAAeA,IAEjB,uBACIc,aAAcF,EACdG,iBAAkBH,EAClBI,IAAKxE,EACLkD,IAAKjD,EAAY4D,MACjBY,QAASJ,QC1DFK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2849d839.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { \r\n    faPlay, \r\n    faAngleLeft, \r\n    faAngleRight,\r\n    faPause\r\n } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//  import {playAudio} from '../util';\r\n\r\nconst Player = ({\r\n    audioRef, \r\n    currentSong, \r\n    isPlaying, \r\n    setIsPlaying, \r\n    setSongInfo, \r\n    songInfo,\r\n    songs,\r\n    setCurrentSong,\r\n    setSongs\r\n}) => {\r\n    \r\n    const activeLibraryHandler = (nextPrev) => {\r\n        //Add Active State\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === nextPrev.id){\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false     \r\n                }    \r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n    //Event Handlers\r\n    const playSongHandler = () => {\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    }\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo(\r\n        {\r\n            ...songInfo,\r\n            currentTime: e.target.value\r\n        });\r\n    }\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction === 'skip-forward'){\r\n         await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n         activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\r\n            // console.log(`next index ${currentIndex + 1}`);\r\n            // console.log(`songs length ${songs.length}`);\r\n        }\r\n        if(direction === 'skip-back'){\r\n            if((currentIndex - 1) % songs.length === -1){\r\n                await setCurrentSong(songs[songs.length -1]);\r\n                activeLibraryHandler(songs[songs.length -1]);\r\n                // playAudio(isPlaying, audioRef);\r\n                if(isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n        }\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div className=\"track\">\r\n                <input \r\n                    min={0} \r\n                    max={songInfo.duration || 0} \r\n                    value={songInfo.currentTime}\r\n                    onChange={dragHandler}\r\n                    type=\"range\" \r\n                />\r\n                <div className=\"animate-track\"></div>\r\n                </div>                \r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n            </div>\r\n\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon \r\n                    onClick={() => skipTrackHandler('skip-back')}\r\n                    className=\"skip-back\" \r\n                    size=\"2x\" \r\n                    icon={faAngleLeft}\r\n                />\r\n                <FontAwesomeIcon \r\n                    onClick={playSongHandler} \r\n                    className=\"play\" \r\n                    size=\"2x\" \r\n                    icon={isPlaying ? faPause : faPlay}\r\n                />                \r\n                <FontAwesomeIcon \r\n                    onClick={() => skipTrackHandler('skip-forward')}\r\n                    className=\"skip-forward\" \r\n                    size=\"2x\" \r\n                    icon={faAngleRight}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return(\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\n// import {playAudio} from '../util';\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\r\n    const songSelectHandler = async () => {\r\n        // const selectedSong = songs.filter((state) => state.id === id);\r\n        // setCurrentSong(selectedSong[0]);\r\n        await setCurrentSong(song);\r\n\r\n        //Add Active State\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === id){\r\n                return {\r\n                    ...song,\r\n                    active: true\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false     \r\n                }\r\n            \r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n        //check if the song is playing\r\n        if(isPlaying) audioRef.current.play();\r\n        // audioRef.current.play();\r\n    }\r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected': \"\"}`}>\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map(song => (\r\n                    <LibrarySong\r\n                        songs={songs}\r\n                        setCurrentSong={setCurrentSong} \r\n                        song={song}\r\n                        id={song.id}\r\n                        key={song.id} \r\n                        audioRef={audioRef}\r\n                        isPlaying={isPlaying}\r\n                        setSongs={setSongs}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n        name: \"Hidden Structure\",\r\n        cover:\r\n          \"https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg\",\r\n        artist: \"Leave, Flitz&Suppe\",\r\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=9913\",\r\n        color: [\"#2e6b5b\", \"#6a6c60\"],\r\n        id: uuidv4(),\r\n        active: false,\r\n      }\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import {useState, useRef} from 'react';\nimport './styles/app.scss';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n\n//Import data\nimport data from './data';\n\nfunction App() {\n  //Ref\n   const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\nconst timeUpdateHandler = (e) => {\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n  setSongInfo(\n      {...songInfo, \n          currentTime: current,\n          duration\n      });\n};\n\nconst songEndHandler = async () => {\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if(isPlaying) audioRef.current.play();\n}\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav \n        libraryStatus={libraryStatus} \n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song currentSong={currentSong}/>\n      <Player \n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying} \n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n    <Library \n      audioRef={audioRef} \n      songs={songs} \n      setCurrentSong={setCurrentSong}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n      libraryStatus={libraryStatus}\n    />\n    <audio \n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n    ></audio>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}